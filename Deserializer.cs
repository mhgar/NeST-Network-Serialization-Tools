using System;

namespace Wander.NeST
{
  /// A deserialization helper that given a byte array allows you to deserialize
  /// objects from it until the end of the array.
  public class Deserializer
  {
    public bool HasData { get { return array.HasNext(); } }

    ByteArray array;

    public Deserializer(ByteArray array)
    {
      if (array == null) 
        throw new ArgumentNullException("array");

      this.array = array;      
    }

    /// Deserialize an ISerializable from this object's internal byte array.
    public T Deserialize<T>() where T : ISerializable, new()
    {
      T t = new T();
      t.DeserializeFrom(this);
      return t;
    }

    /// Deserialize an object using a reader function that implements how the
    /// object should be serialized.
    public T DeserializeUsing<T>(Readers.Reader<T> reader)
    {
      return reader(array);
    }

    #region autogenerated-deserializing-methods
    /* ***AUTO-GENERATED*** 
     * Given readers, these methods return a structure of variables of the types
     * defined in the parameters. */
    public
    Deserialized<A, B>
    DeserializeUsing<A, B>(
      Readers.Reader<A> readerA, Readers.Reader<B> readerB
    )
    {
      var v =
        new Deserialized<A, B>();
      v.a = readerA(array);
      v.b = readerB(array);
      return v;
    }

    public
    Deserialized<A, B, C>
    DeserializeUsing<A, B, C>(
      Readers.Reader<A> readerA, Readers.Reader<B> readerB, 
      Readers.Reader<C> readerC
    )
    {
      var v =
        new Deserialized<A, B, C>();
      v.a = readerA(array);
      v.b = readerB(array);
      v.c = readerC(array);
      return v;
    }

    public
    Deserialized<A, B, C, D>
    DeserializeUsing<A, B, C, D>(
      Readers.Reader<A> readerA, Readers.Reader<B> readerB, 
      Readers.Reader<C> readerC, Readers.Reader<D> readerD
    )
    {
      var v =
        new Deserialized<A, B, C, D>();
      v.a = readerA(array);
      v.b = readerB(array);
      v.c = readerC(array);
      v.d = readerD(array);
      return v;
    }

    public
    Deserialized<A, B, C, D, E>
    DeserializeUsing<A, B, C, D, E>(
      Readers.Reader<A> readerA, Readers.Reader<B> readerB, 
      Readers.Reader<C> readerC, Readers.Reader<D> readerD, 
      Readers.Reader<E> readerE
    )
    {
      var v =
        new Deserialized<A, B, C, D, E>();
      v.a = readerA(array);
      v.b = readerB(array);
      v.c = readerC(array);
      v.d = readerD(array);
      v.e = readerE(array);
      return v;
    }

    public
    Deserialized<A, B, C, D, E, F>
    DeserializeUsing<A, B, C, D, E, F>(
      Readers.Reader<A> readerA, Readers.Reader<B> readerB, 
      Readers.Reader<C> readerC, Readers.Reader<D> readerD, 
      Readers.Reader<E> readerE, Readers.Reader<F> readerF
    )
    {
      var v =
        new Deserialized<A, B, C, D, E, F>();
      v.a = readerA(array);
      v.b = readerB(array);
      v.c = readerC(array);
      v.d = readerD(array);
      v.e = readerE(array);
      v.f = readerF(array);
      return v;
    }

    public
    Deserialized<A, B, C, D, E, F, G>
    DeserializeUsing<A, B, C, D, E, F, G>(
      Readers.Reader<A> readerA, Readers.Reader<B> readerB, 
      Readers.Reader<C> readerC, Readers.Reader<D> readerD, 
      Readers.Reader<E> readerE, Readers.Reader<F> readerF, 
      Readers.Reader<G> readerG
    )
    {
      var v =
        new Deserialized<A, B, C, D, E, F, G>();
      v.a = readerA(array);
      v.b = readerB(array);
      v.c = readerC(array);
      v.d = readerD(array);
      v.e = readerE(array);
      v.f = readerF(array);
      v.g = readerG(array);
      return v;
    }

    public
    Deserialized<A, B, C, D, E, F, G, H>
    DeserializeUsing<A, B, C, D, E, F, G, H>(
      Readers.Reader<A> readerA, Readers.Reader<B> readerB, 
      Readers.Reader<C> readerC, Readers.Reader<D> readerD, 
      Readers.Reader<E> readerE, Readers.Reader<F> readerF, 
      Readers.Reader<G> readerG, Readers.Reader<H> readerH
    )
    {
      var v =
        new Deserialized<A, B, C, D, E, F, G, H>();
      v.a = readerA(array);
      v.b = readerB(array);
      v.c = readerC(array);
      v.d = readerD(array);
      v.e = readerE(array);
      v.f = readerF(array);
      v.g = readerG(array);
      v.h = readerH(array);
      return v;
    }

    public
    Deserialized<A, B, C, D, E, F, G, H, I>
    DeserializeUsing<A, B, C, D, E, F, G, H, I>(
      Readers.Reader<A> readerA, Readers.Reader<B> readerB, 
      Readers.Reader<C> readerC, Readers.Reader<D> readerD, 
      Readers.Reader<E> readerE, Readers.Reader<F> readerF, 
      Readers.Reader<G> readerG, Readers.Reader<H> readerH, 
      Readers.Reader<I> readerI
    )
    {
      var v =
        new Deserialized<A, B, C, D, E, F, G, H, I>();
      v.a = readerA(array);
      v.b = readerB(array);
      v.c = readerC(array);
      v.d = readerD(array);
      v.e = readerE(array);
      v.f = readerF(array);
      v.g = readerG(array);
      v.h = readerH(array);
      v.i = readerI(array);
      return v;
    }

    public
    Deserialized<A, B, C, D, E, F, G, H, I, J>
    DeserializeUsing<A, B, C, D, E, F, G, H, I, J>(
      Readers.Reader<A> readerA, Readers.Reader<B> readerB, 
      Readers.Reader<C> readerC, Readers.Reader<D> readerD, 
      Readers.Reader<E> readerE, Readers.Reader<F> readerF, 
      Readers.Reader<G> readerG, Readers.Reader<H> readerH, 
      Readers.Reader<I> readerI, Readers.Reader<J> readerJ
    )
    {
      var v =
        new Deserialized<A, B, C, D, E, F, G, H, I, J>();
      v.a = readerA(array);
      v.b = readerB(array);
      v.c = readerC(array);
      v.d = readerD(array);
      v.e = readerE(array);
      v.f = readerF(array);
      v.g = readerG(array);
      v.h = readerH(array);
      v.i = readerI(array);
      v.j = readerJ(array);
      return v;
    }

    public
    Deserialized<A, B, C, D, E, F, G, H, I, J, K>
    DeserializeUsing<A, B, C, D, E, F, G, H, I, J, K>(
      Readers.Reader<A> readerA, Readers.Reader<B> readerB, 
      Readers.Reader<C> readerC, Readers.Reader<D> readerD, 
      Readers.Reader<E> readerE, Readers.Reader<F> readerF, 
      Readers.Reader<G> readerG, Readers.Reader<H> readerH, 
      Readers.Reader<I> readerI, Readers.Reader<J> readerJ, 
      Readers.Reader<K> readerK
    )
    {
      var v =
        new Deserialized<A, B, C, D, E, F, G, H, I, J, K>();
      v.a = readerA(array);
      v.b = readerB(array);
      v.c = readerC(array);
      v.d = readerD(array);
      v.e = readerE(array);
      v.f = readerF(array);
      v.g = readerG(array);
      v.h = readerH(array);
      v.i = readerI(array);
      v.j = readerJ(array);
      v.k = readerK(array);
      return v;
    }

    public
    Deserialized<A, B, C, D, E, F, G, H, I, J, K, L>
    DeserializeUsing<A, B, C, D, E, F, G, H, I, J, K, L>(
      Readers.Reader<A> readerA, Readers.Reader<B> readerB, 
      Readers.Reader<C> readerC, Readers.Reader<D> readerD, 
      Readers.Reader<E> readerE, Readers.Reader<F> readerF, 
      Readers.Reader<G> readerG, Readers.Reader<H> readerH, 
      Readers.Reader<I> readerI, Readers.Reader<J> readerJ, 
      Readers.Reader<K> readerK, Readers.Reader<L> readerL
    )
    {
      var v =
        new Deserialized<A, B, C, D, E, F, G, H, I, J, K, L>();
      v.a = readerA(array);
      v.b = readerB(array);
      v.c = readerC(array);
      v.d = readerD(array);
      v.e = readerE(array);
      v.f = readerF(array);
      v.g = readerG(array);
      v.h = readerH(array);
      v.i = readerI(array);
      v.j = readerJ(array);
      v.k = readerK(array);
      v.l = readerL(array);
      return v;
    }

    public
    Deserialized<A, B, C, D, E, F, G, H, I, J, K, L, M>
    DeserializeUsing<A, B, C, D, E, F, G, H, I, J, K, L, M>(
      Readers.Reader<A> readerA, Readers.Reader<B> readerB, 
      Readers.Reader<C> readerC, Readers.Reader<D> readerD, 
      Readers.Reader<E> readerE, Readers.Reader<F> readerF, 
      Readers.Reader<G> readerG, Readers.Reader<H> readerH, 
      Readers.Reader<I> readerI, Readers.Reader<J> readerJ, 
      Readers.Reader<K> readerK, Readers.Reader<L> readerL, 
      Readers.Reader<M> readerM
    )
    {
      var v =
        new Deserialized<A, B, C, D, E, F, G, H, I, J, K, L, M>();
      v.a = readerA(array);
      v.b = readerB(array);
      v.c = readerC(array);
      v.d = readerD(array);
      v.e = readerE(array);
      v.f = readerF(array);
      v.g = readerG(array);
      v.h = readerH(array);
      v.i = readerI(array);
      v.j = readerJ(array);
      v.k = readerK(array);
      v.l = readerL(array);
      v.m = readerM(array);
      return v;
    }

    public
    Deserialized<A, B, C, D, E, F, G, H, I, J, K, L, M, N>
    DeserializeUsing<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(
      Readers.Reader<A> readerA, Readers.Reader<B> readerB, 
      Readers.Reader<C> readerC, Readers.Reader<D> readerD, 
      Readers.Reader<E> readerE, Readers.Reader<F> readerF, 
      Readers.Reader<G> readerG, Readers.Reader<H> readerH, 
      Readers.Reader<I> readerI, Readers.Reader<J> readerJ, 
      Readers.Reader<K> readerK, Readers.Reader<L> readerL, 
      Readers.Reader<M> readerM, Readers.Reader<N> readerN
    )
    {
      var v =
        new Deserialized<A, B, C, D, E, F, G, H, I, J, K, L, M, N>();
      v.a = readerA(array);
      v.b = readerB(array);
      v.c = readerC(array);
      v.d = readerD(array);
      v.e = readerE(array);
      v.f = readerF(array);
      v.g = readerG(array);
      v.h = readerH(array);
      v.i = readerI(array);
      v.j = readerJ(array);
      v.k = readerK(array);
      v.l = readerL(array);
      v.m = readerM(array);
      v.n = readerN(array);
      return v;
    }

    public
    Deserialized<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>
    DeserializeUsing<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(
      Readers.Reader<A> readerA, Readers.Reader<B> readerB, 
      Readers.Reader<C> readerC, Readers.Reader<D> readerD, 
      Readers.Reader<E> readerE, Readers.Reader<F> readerF, 
      Readers.Reader<G> readerG, Readers.Reader<H> readerH, 
      Readers.Reader<I> readerI, Readers.Reader<J> readerJ, 
      Readers.Reader<K> readerK, Readers.Reader<L> readerL, 
      Readers.Reader<M> readerM, Readers.Reader<N> readerN, 
      Readers.Reader<O> readerO
    )
    {
      var v =
        new Deserialized<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>();
      v.a = readerA(array);
      v.b = readerB(array);
      v.c = readerC(array);
      v.d = readerD(array);
      v.e = readerE(array);
      v.f = readerF(array);
      v.g = readerG(array);
      v.h = readerH(array);
      v.i = readerI(array);
      v.j = readerJ(array);
      v.k = readerK(array);
      v.l = readerL(array);
      v.m = readerM(array);
      v.n = readerN(array);
      v.o = readerO(array);
      return v;
    }

    public
    Deserialized<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>
    DeserializeUsing<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(
      Readers.Reader<A> readerA, Readers.Reader<B> readerB, 
      Readers.Reader<C> readerC, Readers.Reader<D> readerD, 
      Readers.Reader<E> readerE, Readers.Reader<F> readerF, 
      Readers.Reader<G> readerG, Readers.Reader<H> readerH, 
      Readers.Reader<I> readerI, Readers.Reader<J> readerJ, 
      Readers.Reader<K> readerK, Readers.Reader<L> readerL, 
      Readers.Reader<M> readerM, Readers.Reader<N> readerN, 
      Readers.Reader<O> readerO, Readers.Reader<P> readerP
    )
    {
      var v =
        new Deserialized<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>();
      v.a = readerA(array);
      v.b = readerB(array);
      v.c = readerC(array);
      v.d = readerD(array);
      v.e = readerE(array);
      v.f = readerF(array);
      v.g = readerG(array);
      v.h = readerH(array);
      v.i = readerI(array);
      v.j = readerJ(array);
      v.k = readerK(array);
      v.l = readerL(array);
      v.m = readerM(array);
      v.n = readerN(array);
      v.o = readerO(array);
      v.p = readerP(array);
      return v;
    }
    #endregion
  }
}